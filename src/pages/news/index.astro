---
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import NewsPreview from "../../components/NewsPreview.astro";

const response = await fetch("https://cms.reaqct.org/index.php?graphql", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    query: `
        query postsQuery {
            news {
                nodes {
                    id
                    title
                    content
                    date
                    uri
                    featuredImage {
                        node {
                            altText
                            sourceUrl
                        }
                    }
                }
            }
        }
      `,
  }),
});

const json = await response.json();
const { news } = json.data;

type NewsItem = {
  id: string;
  title: string;
  content: string;
  date: string;
  uri: string;
  featuredImage: {
    node: {
      altText: string;
      sourceUrl: string;
    };
  };
};
---

<Layout title="Submission - ReAQCT 2024">
  <main>
    <section class="pt-12">
      <Image
        src={import("../../assets/images/illustration_lg.png")}
        alt="ReAQCT illustration"
        width="650"
        height="650"
        class="absolute right-[-5%] top-[5%] z-0 opacity-10"
      />
      <Image
        src={import("../../assets/images/illustration_lg.png")}
        alt="ReAQCT illustration"
        width="400"
        height="400"
        class="absolute left-[5%] top-[50%] z-0 opacity-10"
      />
      <div class="container relative flex flex-col gap-12">
        <div class="flex w-full flex-col gap-6">
          <h1
            class="text-xl font-semibold uppercase text-text-title md:text-2xl"
          >
            News
          </h1>
          <p>
            Stay up to date with all the latest <span
              class="text-primary-orange font-semibold">REAQCT 2024</span
            > conference news and updates!
          </p>
        </div>
        <div class="grid grid-cols-12 gap-12">
          {
            news.nodes.map(function (newsitem: NewsItem) {
              return (
                <NewsPreview
                  uri={newsitem.uri}
                  title={newsitem.title}
                  thumbnailSourceUrl={newsitem.featuredImage.node.sourceUrl}
                  thumbnailAlt={newsitem.featuredImage.node.altText}
                  previewText={newsitem.content}
                  createdAt={newsitem.date}
                />
              );
            })
          }
        </div>
      </div>
    </section>
  </main>
</Layout>
